@model SMGJ.Models.KONTAMINIMI

@{
    ViewBag.Title = "Create";
    var nivelet = (IEnumerable<SelectListItem>)ViewBag.Nivelet;
}
<head>
    <link href="~/Content/theme/vendor/sweetalert/sweet-alert.css" rel="stylesheet" media="screen">
    <link href="~/Content/theme/vendor/sweetalert/ie9.css" rel="stylesheet" media="screen">
    <link href="~/Content/theme/vendor/toastr/toastr.min.css" rel="stylesheet" media="screen">
    <link href="~/Content/theme/vendor/select2/select2.min.css" rel="stylesheet" media="screen">
</head>
<body>
    <section id="page-title">
        <div class="row">
            <div class="col-sm-8">
                <h1 class="mainTitle" style="color:royalblue; font-family: Shakespeare, 'Times New Roman', Times, serif">Regjistrimi i Kontaminimit</h1>
            </div>
        </div>
    </section>
    <div class="container-fluid container-fullw bg-white">
        <div class="panel panel-white">
            <div class="panel-body">
                <form id="forma">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="control-label">
                                    Vlera <span class="symbol required" aria-required="true"></span>
                                </label>
                                @Html.TextBoxFor(m => m.Vlera, new { @class = "form-control", @placeholder = "Shkruani vlerën e kontaminimit" })

                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="control-label">
                                    Niveli <span class="symbol required" aria-required="true"></span>
                                </label>
                                @*@Html.TextBoxFor(m => m.Niveli, new { @class = "form-control", @placeholder = "Shkruani emrin e metodes" })*@
                                <br />
                                @Html.DropDownListFor(n => nivelet, nivelet.Skip(1), nivelet.First().Text, (new { @class = "form-control select2", @Id = "Niveli" }))
                                @*@Html.DropDownList("Zgjedh", nivelet, (new { @class = "form-control select2 ", @name = "dropdown", @Id = "Niveli" }))*@
                                <!--<div class="form-group">


                                    @*@Html.DropDownListFor(n => nivelet, null, "Zgjedh", (new { @class = "form-control select2", @Id = "Niveli" }))*@
                                    <!--@Html.ValidationMessageFor(n => nivelet, "", new { @class = "text-danger symbol" })
                                </div>-->
                                @*@Html.DropDownList("Zgjedh", nivelet, (new { @class = "@form-control select2", @name = "dropdown", @Id = "Niveli" }))*@
                                @*@Html.DropDownListFor(nivelet,null,"Zgjedh", (new { @class = "form-control select2" }))*@
                            </div>
                        </div>
                    </div>
                    @*<div class="row">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <label class="control-label">
                                        Emertimi <span class="symbol required" aria-required="true"></span>
                                    </label>
                                    @Html.TextBoxFor(m => m., new { @class = "form-control", @placeholder = "Shkruani emertimin" })
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="form-group">
                                    <label class="control-label">
                                        Renditja <span class="symbol required" aria-required="true"></span>
                                    </label>
                                    @Html.TextBoxFor(m => m.Renditja, new { @class = "form-control", @placeholder = "Shkruani rendditjen" })
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <div class="col-md-12">
                                        <div class="checkbox clip-check check-primary">
                                            <input type="checkbox" id="Aktiv" value="1" checked="@Model.Aktiv">
                                            <label for="Aktiv">
                                                Aktiv
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>*@
                </form>
            </div>
            <div class="panel-footer clearfix">
                <div class="col-md-12">
                    <button class="btn btn-primary btn-wide pull-right" type="button" onclick="regjistro(this)">
                        Regjistro <i class="fa fa-arrow-circle-right"></i>
                    </button>
                    <a href="@Url.Action("Index","KONTAMINIMI")" class="btn btn-danger btn-wide">Anulo <i class="fa fa-arrow-circle-left"></i></a>
                </div>
            </div>
        </div>
    </div>
    @section Scripts{
        <script>
        runValidator1 = function () {
            var form1 = $('#forma');
            var errorHandler1 = $('.errorHandler', form1);
            var successHandler1 = $('.successHandler', form1);
            $('#forma').validate({
                errorElement: "span", // contain the error msg in a span tag
                errorClass: 'help-block',
                errorPlacement: function (error, element) { // render error placement for each input type
                    if (element.attr("type") == "radio" || element.attr("type") == "checkbox") { // for chosen elements, need to insert the error after the chosen container
                        error.insertAfter($(element).closest('.form-group').children('div').children().last());
                    } else if (element.attr("name") == "dd" || element.attr("name") == "mm" || element.attr("name") == "yyyy") {
                        error.insertAfter($(element).closest('.form-group').children('div'));
                    } else {
                        error.insertAfter(element);
                        // for other inputs, just perform default behavior
                    }
                },
                ignore: "",
                rules: {
                    Controller: {
                        required: true
                    },
                    Action_Metoda: {
                        required: true
                    },
                    Emertimi: {
                        required: true
                    },

                    Renditja: {
                        required: true,
                        number: true

                    },
                    Vlera: {
                        required: true,
                        number: true
                    },
                    Niveli: {
                        required: true,
                    },
                },
                invalidHandler: function (event, validator) { //display error alert on form submit
                    successHandler1.hide();
                    errorHandler1.show();
                },
                highlight: function (element) {
                    $(element).closest('.help-block').removeClass('valid');
                    // display OK icon
                    $(element).closest('.form-group').removeClass('has-success').addClass('has-error').find('.symbol').removeClass('ok').addClass('required');
                    // add the Bootstrap error class to the control group
                },
                unhighlight: function (element) { // revert the change done by hightlight
                    $(element).closest('.form-group').removeClass('has-error');
                    // set error class to the control group
                },
                success: function (label, element) {
                    label.addClass('help-block valid');
                    // mark the current input as valid and display OK icon
                    $(element).closest('.form-group').removeClass('has-error').addClass('has-success').find('.symbol').removeClass('required').addClass('ok');
                },
                submitHandler: function (form) {
                    successHandler1.show();
                    errorHandler1.hide();
                    // submit form
                    //$('#form').submit();
                }
            });
        };
        var regjistro = function (btn) {

                runValidator1();
                if ($("#forma").valid() === true) {
                    var obj = {
                    //Controller: $("#Controller").val(),
                    //Action_Metoda: $("#Action_Metoda").val(),
                    //Emertimi: $("#Emertimi").val(),
                    //Renditja: $("#Renditja").val(),
                        //Aktiv: $('#Aktiv').is(':checked')
                        Vlera: $("#Vlera").val(),
                        Niveli: $("#Niveli :selected").text()
                };
                var url_redirect = '@Url.Action("Index", "KONTAMINIMI")';
                $.ajax({
                    url: "@Url.Action("Create", "KONTAMINIMI")",
                    cache: false,
                    type: "POST",
                    dataType: "json",
                    data: obj,
                    success: function (rs) {
                        if (rs.status) {
                            swal({ title: "U krijua!", text: "Kontaminimi që keni dhënë është shtuar me sukses!", type: "success" }, function () {
                                //location.reload()
                                window.location.href = url_redirect;

                            });

                        }
                        else {
                            //alert("sadlsdab")
                            //alert(rs.Mesazhi, "error");
                            swal("Gabim në shtim!", rs.Mesazhi, "error");
                        }

                    },
                    error: function (jqXHR, error, errorThrown) {
                        if (jqXHR.status && jqXHR.status == 400) {
                            /*alert("alslhdsald")*/
                            swal("Anulim!","Ka ndodhur një problem në shtim! Ju lutemi provoni përsëri!","error")
                            console.log(jqXHR.responseText);
                        } else {
                            console.log("Something went wrong");
                        }
                    }
                });
            }

            };

        @*var regjistro = function (btn) {

            runValidator1();
            var url_redirect = '@Url.Action("Index", "KONTAMINIMI")';
            //alert("heelo");
            if ($("#forma").valid() === true) {

                var obj = {
                    //Controller: $("#Controller").val(),
                    //Action_Metoda: $("#Action_Metoda").val(),
                    //Emertimi: $("#Emertimi").val(),
                    //Renditja: $("#Renditja").val(),
                    //Aktiv: $('#Aktiv').is(':checked')
                    Vlera: $("#Vlera").val(),
                    Niveli: $("#Niveli :selected").text()
                };
                //swal({
                //    title: "Are you sure?",
                //    text: "You will not be able to recover this imaginary file!",
                //    type: "warning",
                //    showCancelButton: true,
                //    confirmButtonColor: "#DD6B55",
                //    confirmButtonText: "Yes, delete it!",
                //    cancelButtonText: "No, cancel plx!",
                //    closeOnConfirm: false,
                //    closeOnCancel: false
                //}, //end swal
                    //function (isConfirm) {
                        //if (isConfirm) {
                            var obj = { ID: $(btn).data("kontid") };
                            $.ajax({
                                url: "@Url.Action("Create", "KONTAMINIMI")",
                                cache: false,
                                type: "POST",
                                dataType: "json",
                                data: obj,
                                success: function (rs) {
                                    if (rs.status) {
                                        swal("U regjistrua!", "Kontaminimi u regjistrua me sukses", "success");
                                        //window.setTimeout(function () { location.reload() }, 2000);
                                        location.reload();
                                    } else {
                                        //alert("This cannot be deleted");
                                        swal("Cancelled", rs.Mesazhi, "error");
                                    }
                                },
                                error: function (jqXHR, error, errorThrown) {
                                    if (jqXHR.status && jqXHR.status == 400) {
                                        console.log(jqXHR.responseText);
                                    }
                                    else {
                                        swal("Error deleting!", "Please try again", "error");
                                    }
                                }
                            }); //end ajax
                        //} else {
                        //    swal("Cancelled", "Your imaginary file is safe :)", "error");
                        //}
                    //});
            //}
        }; //end Register*@
        </script>

        <script src="~/Content/theme/vendor/sweetalert/sweet-alert.min.js"></script>
        
        <script src="~/Content/theme/vendor/select2/select2.min.js"></script>
        <script>
            jQuery(document).ready(function () {

                $(".select2").select2(
                    {
                        width: '100%'
                    });
            })
        </script>
        }
    </body>
